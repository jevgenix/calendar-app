import { useSession, signIn, getSession, GetSessionParams } from 'next-auth/react'
import React, { useEffect, useState } from "react";
import styles from '../styles/Home.module.css'
import Navbar from '../components/MainPage/NavBar/Navbar';
import { Head } from 'next/document';
import { Calendars } from '../types';
import MainPagePomo from '../components/MainPage/MainPagePomo';
import MainPageWeather from '../components/MainPage/MainPageWeather';
import DisplayData from '../components/MainPage/DisplayData';

const Home = () => {
    const { data: session, status } = useSession();
    const [dataOfCalendars, setDataOfCalendars] = useState<Calendars>();
    const [currentCalendarId, setCurrentCalendId] = useState<string>("")
    const [dataStatus, setStatus] = useState(false)
    useEffect(() => {
        const loadCalendars = async () => {
            const getCalendars = await fetch("/api/getCalendarsList")
            const calendarsData = await getCalendars.json()
            setDataOfCalendars(calendarsData)
            const primaryCalendar: string = session?.user?.email as string
            setCurrentCalendId(primaryCalendar)
            setStatus(true)
        }
        void loadCalendars()
    }, [session?.user?.email]);
    <Head>
        <Head>Home page</Head>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
    </Head>
    if (dataStatus === true && status === "authenticated") {
        console.log(dataOfCalendars)
        return (
            <div>
                <Navbar />
                <main className={styles.main}>
                    <div>
                        <div className={styles.flexCenter}>
                            <MainPagePomo />
                        </div>
                        <div className={styles.flexCenter}>
                            <MainPageWeather />
                        </div>
                    </div>
                    <div className={styles.schedule}>
                        <h1 className={styles.header}>Schedule</h1>
                        <select name="slc" id="cal" defaultValue={currentCalendarId} title="Choose your calendar" className={styles.calSelect} onChange={(e) => setCurrentCalendId(e.target.value)}>
                            {dataOfCalendars?.calendars?.map((calendar) => {
                                return (
                                    <option value={calendar.id} key={calendar.id}>{calendar.summary}</option>
                                )
                            })}
                        </select>
                        <DisplayData calendarId={currentCalendarId} />
                    </div>
                </main>
            </div>
        );
    } else {
        return (
            <div>
                <p>You are not signed in.</p>
                <button onClick={() => signIn()}>Sign in</button>
            </div>

        )
    }
}

export default Home

export const getServerSideProps = async (context: GetSessionParams | undefined) => {
    const session = await getSession(context);

    if (!session) {
        return {
            redirect: {
                destination: "/login",
            },
        };
    }
    return {
        props: {
            session,
        },
    };
}